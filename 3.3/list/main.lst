C51 COMPILER V9.54   MAIN                                                                  02/21/2020 13:08:25 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) T
                    -ABS(2) OBJECT(.\list\main.obj)

line level    source

   1          #include  "config.h"
   2          #include  "GPIO.h"
   3          #include  "delay.h"
   4          #include  "timer.h"
   5          
   6          #define  MODE1   0x01   //模式1标志
   7          #define  MODE2   0x02   //模式2标志
   8          #define  MODE3   0x03   //模式3标志
   9          #define  MODE4   0x04   //模式4标志
  10          
  11          #define  MS1   1000      //模式1间隔时间ms
  12          #define  MS2   500      //模式2间隔时间ms
  13          #define  MS3   200      //模式3间隔时间ms
  14          #define  MS4   800      //模式4间隔时间ms
  15          
  16          #define BUZZER_OPEN  500     //蜂鸣器响应时间ms
  17          #define BUZZER_CLOSE  1000    //蜂鸣器停止时间ms
  18          
  19          #define BUZZER   P25
  20          
  21          u8 LED[] = {GPIO_Pin_0,GPIO_Pin_1,GPIO_Pin_2,GPIO_Pin_3,GPIO_Pin_4,GPIO_Pin_5,GPIO_Pin_6,GPIO_Pin_7};
  22          char i ;
  23          u8 MODE = 2;
  24          u16 n = 0;    //timer0计数
  25          
  26          void  GPIO_config(void)
  27          {
  28   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  29   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  30   1        GPIO_InitStructure.Mode = GPIO_PullUp;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  31   1        GPIO_Inilize(GPIO_P1,&GPIO_InitStructure);
  32   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);
  33   1      }
  34          
  35          void  Timer_config(void)
  36          {
  37   1        TIM_InitTypeDef   TIM_InitStructure;          //结构定义
  38   1        TIM_InitStructure.TIM_Mode      = TIM_8BitAutoReload; //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TIM
             -_8BitAutoReload,TIM_16BitAutoReloadNoMask
  39   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //指定中断优先级, PolityHigh,PolityLow
  40   1        TIM_InitStructure.TIM_Interrupt = ENABLE;//DISABLE;       //中断是否允许,   ENABLE或DISABLE
  41   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;     //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
  42   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //是否输出高速脉冲, ENABLE或DISABLE
  43   1        TIM_InitStructure.TIM_Value     = 5;    //初值,
  44   1        TIM_InitStructure.TIM_Run       = ENABLE;       //是否初始化后启动定时器, ENABLE或DISABLE
  45   1        Timer_Inilize(Timer0,&TIM_InitStructure);       //初始化Timer0    Timer0,Timer1,Timer2
  46   1      }
  47          
  48          void mode_one()//模式1
  49          {
  50   1        P1 = 0xff;
  51   1        delay_ms(MS1/2);
C51 COMPILER V9.54   MAIN                                                                  02/21/2020 13:08:25 PAGE 2   

  52   1        for(i = 0 ; i < 8 ; i ++ )
  53   1        {
  54   2          GPIO_WritePin(GPIO_P1 , LED[i] , LOW);
  55   2          delay_ms(MS1/2);
  56   2        }
  57   1      }
  58          
  59          void mode_two()//模式2
  60          {
  61   1        P1 = 0xff;
  62   1        delay_ms(MS2/2);
  63   1        for(i = 7 ; i >= 0 ; i -- )
  64   1        {
  65   2          GPIO_WritePin(GPIO_P1 , LED[i] , LOW);
  66   2          delay_ms(MS2/2);
  67   2        }
  68   1      }
  69          
  70          void mode_three()//模式3
  71          {
  72   1        P1 = 0xff;
  73   1        delay_ms(MS3/2);
  74   1        for(i = 0 ; i < 4 ; i ++ )
  75   1        {
  76   2          GPIO_WritePin(GPIO_P1 , LED[i] , LOW);
  77   2          GPIO_WritePin(GPIO_P1 , LED[7-i] , LOW);
  78   2          delay_ms(MS3/2);
  79   2        }
  80   1      }
  81          
  82          void mode_four()//模式4
  83          {
  84   1        P1 = 0xff;
  85   1        delay_ms(MS4/2);
  86   1        for(i = 3 ; i >= 0 ; i -- )
  87   1         {
  88   2          GPIO_WritePin(GPIO_P1 , LED[i] , LOW);
  89   2          GPIO_WritePin(GPIO_P1 , LED[7-i] , LOW);
  90   2          delay_ms(MS4/2);
  91   2         }
  92   1      }
  93          
  94          void timer0_int (void) interrupt TIMER0_VECTOR
  95          {  
  96   1          n++ ;
  97   1          if( n <= 4*BUZZER_CLOSE)  BUZZER = 0;
  98   1          else if(n <= (4*BUZZER_OPEN + 4*BUZZER_CLOSE)) BUZZER = 1;
  99   1          else  n = 0;
 100   1      }
 101          
 102          
 103          /******************** 主函数 **************************/
 104          void main(void)
 105          {
 106   1        GPIO_config();
 107   1        Timer_config();
 108   1        EA = 1;
 109   1        while(1)
 110   1        {
 111   2          //if(MODE == MODE1) mode_one();
 112   2          //if(MODE == MODE2) mode_two();
 113   2          //if(MODE == MODE3) mode_three(); 
C51 COMPILER V9.54   MAIN                                                                  02/21/2020 13:08:25 PAGE 3   

 114   2          //if(MODE == MODE4) mode_four();  
 115   2          mode_one();
 116   2          mode_two();
 117   2          mode_three();
 118   2          mode_four();      
 119   2        }
 120   1      }
 121          
 122          
 123          
 124          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
