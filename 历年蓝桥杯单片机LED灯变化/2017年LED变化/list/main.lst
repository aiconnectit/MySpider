C51 COMPILER V9.54   MAIN                                                                  02/21/2020 22:14:55 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) T
                    -ABS(2) OBJECT(.\list\main.obj)

line level    source

   1          #include  "config.h"
   2          #include  "GPIO.h"
   3          #include  "delay.h"
   4          #include  "timer.h"
   5          #include  "key.h"
   6          
   7          #define BUZZER   P06
   8          
   9          
  10          #define LED0_Pin GPIO_Pin_0
  11          #define LED1_Pin GPIO_Pin_1
  12          #define LED2_Pin GPIO_Pin_2
  13          #define LED3_Pin GPIO_Pin_3
  14          #define LED4_Pin GPIO_Pin_4
  15          #define LED5_Pin GPIO_Pin_5
  16          #define LED6_Pin GPIO_Pin_6
  17          
  18          u16 cnt = 0;    //timer0计数
  19          u8 n=0;
  20          
  21          void  GPIO_config(void)
  22          {
  23   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  24   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  25   1        GPIO_InitStructure.Mode = GPIO_PullUp;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  26   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);
  27   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);
  28   1        GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);
  29   1      }
  30          
  31          void  Timer_config(void)
  32          {
  33   1        TIM_InitTypeDef   TIM_InitStructure;          //结构定义
  34   1        TIM_InitStructure.TIM_Mode      = TIM_8BitAutoReload; //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TIM
             -_8BitAutoReload,TIM_16BitAutoReloadNoMask
  35   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //指定中断优先级, PolityHigh,PolityLow
  36   1        TIM_InitStructure.TIM_Interrupt = ENABLE;//DISABLE;       //中断是否允许,   ENABLE或DISABLE
  37   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;     //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
  38   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //是否输出高速脉冲, ENABLE或DISABLE
  39   1        TIM_InitStructure.TIM_Value     = 5;    //初值,
  40   1        TIM_InitStructure.TIM_Run       = ENABLE;       //是否初始化后启动定时器, ENABLE或DISABLE
  41   1        Timer_Inilize(Timer0,&TIM_InitStructure);       //初始化Timer0    Timer0,Timer1,Timer2
  42   1      }
  43          
  44          
  45          
  46          void timer0_int (void) interrupt TIMER0_VECTOR
  47          {   
  48   1          cnt++ ;
  49   1          if(cnt ==2000) 
  50   1          { 
  51   2            cnt=0;
C51 COMPILER V9.54   MAIN                                                                  02/21/2020 22:14:55 PAGE 2   

  52   2            n=1;
  53   2            
  54   2          }
  55   1          
  56   1      }
  57          
  58          
  59          /******************** 主函数 **************************/
  60          void main(void)
  61          {
  62   1        u16 key_led=0,san=0;
  63   1        GPIO_config();
  64   1        Timer_config();
  65   1        EA = 1;
  66   1        while(1)
  67   1        {
  68   2          P2=0x80;
  69   2          if(GetKeyVal_Button()==S5DOWN)
  70   2          {
  71   3          
  72   3              key_led=1;
  73   3          } 
  74   2          
  75   2          switch (key_led)
  76   2          {
  77   3            case 0:
  78   3            {
  79   4              P0=0xff;
  80   4              if(n==1)
  81   4              {
  82   5                n=0;
  83   5                GPIO_WritePin(GPIO_P0, GPIO_Pin_0 ,1); 
  84   5                san++;
  85   5                if(san==25)
  86   5                {
  87   6                 key_led=1;
  88   6                }
  89   5               }
  90   4            }
  91   3            break;
  92   3            
  93   3            case 1:
  94   3            {
  95   4              GPIO_WritePin(GPIO_P0, GPIO_Pin_0 ,0); 
  96   4            }
  97   3            break;
  98   3          }
  99   2        
 100   2        }
 101   1        
 102   1      }
 103          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    197    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  02/21/2020 22:14:55 PAGE 3   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
