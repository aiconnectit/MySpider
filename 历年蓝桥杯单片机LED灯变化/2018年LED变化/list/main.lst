C51 COMPILER V9.54   MAIN                                                                  03/07/2020 20:58:10 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) T
                    -ABS(2) OBJECT(.\list\main.obj)

line level    source

   1          #include  "config.h"
   2          #include  "GPIO.h"
   3          #include  "delay.h"
   4          #include  "timer.h"
   5          #include  "key.h"
   6          
   7          
   8          #define LED0_Pin GPIO_Pin_0
   9          #define LED1_Pin GPIO_Pin_1
  10          #define LED2_Pin GPIO_Pin_2
  11          #define LED3_Pin GPIO_Pin_3
  12          #define LED4_Pin GPIO_Pin_4
  13          #define LED5_Pin GPIO_Pin_5
  14          #define LED6_Pin GPIO_Pin_6
  15          
  16          
  17          #define BUZZER   P06
  18          
  19          u8 LED[] = {GPIO_Pin_0,GPIO_Pin_1,GPIO_Pin_2,GPIO_Pin_3,GPIO_Pin_4,GPIO_Pin_5,GPIO_Pin_6,GPIO_Pin_7};
  20          
  21          u16 cnt = 0;    //timer0计数
  22          u8 n=0;
  23          
  24          void  GPIO_config(void)
  25          {
  26   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  27   1        GPIO_InitStructure.Pin  = GPIO_Pin_All;   //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7, 或操作
  28   1        GPIO_InitStructure.Mode = GPIO_PullUp;    //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
  29   1        GPIO_Inilize(GPIO_P0,&GPIO_InitStructure);
  30   1        GPIO_Inilize(GPIO_P2,&GPIO_InitStructure);
  31   1        GPIO_Inilize(GPIO_P3,&GPIO_InitStructure);
  32   1      }
  33          
  34          void  Timer_config(void)
  35          {
  36   1        TIM_InitTypeDef   TIM_InitStructure;          //结构定义
  37   1        TIM_InitStructure.TIM_Mode      = TIM_8BitAutoReload; //指定工作模式,   TIM_16BitAutoReload,TIM_16Bit,TIM
             -_8BitAutoReload,TIM_16BitAutoReloadNoMask
  38   1        TIM_InitStructure.TIM_Polity    = PolityLow;      //指定中断优先级, PolityHigh,PolityLow
  39   1        TIM_InitStructure.TIM_Interrupt = ENABLE;//DISABLE;       //中断是否允许,   ENABLE或DISABLE
  40   1        TIM_InitStructure.TIM_ClkSource = TIM_CLOCK_1T;     //指定时钟源,     TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_
             -Ext
  41   1        TIM_InitStructure.TIM_ClkOut    = ENABLE;       //是否输出高速脉冲, ENABLE或DISABLE
  42   1        TIM_InitStructure.TIM_Value     = 5;    //初值,
  43   1        TIM_InitStructure.TIM_Run       = ENABLE;       //是否初始化后启动定时器, ENABLE或DISABLE
  44   1        Timer_Inilize(Timer0,&TIM_InitStructure);       //初始化Timer0    Timer0,Timer1,Timer2
  45   1      }
  46          
  47          void LED_LeftToRight(u8 Pinx) //模式1
  48          {
  49   1        P0 = 0xff;
  50   1        GPIO_WritePin(GPIO_P0 , LED[Pinx], 1); 
  51   1      }
C51 COMPILER V9.54   MAIN                                                                  03/07/2020 20:58:10 PAGE 2   

  52          
  53          void LED_RightToLeft(u8 Pinx)//模式2
  54          {
  55   1        P0 = 0xff;
  56   1        GPIO_WritePin(GPIO_P0 , LED[Pinx], 1); 
  57   1        
  58   1      }
  59          
  60          void mode_three(u8 Pinx)//模式3
  61          {
  62   1          P0 = 0xff;
  63   1          GPIO_WritePin(GPIO_P0 , LED[Pinx] , 1);
  64   1          GPIO_WritePin(GPIO_P0 , LED[7-Pinx] , 1);
  65   1      }
  66          void mode_four(u8 Pinx)//模式4
  67          {
  68   1          P0 = 0xff;
  69   1          GPIO_WritePin(GPIO_P0 , LED[Pinx] , 1);
  70   1          GPIO_WritePin(GPIO_P0 , LED[7-Pinx] , 1);
  71   1         
  72   1      }
  73          void timer0_int (void) interrupt TIMER0_VECTOR
  74          {   
  75   1          cnt++ ;
  76   1          if(cnt ==10000) 
  77   1          { 
  78   2            cnt=0;
  79   2            n=1;
  80   2          }
  81   1      }
  82          
  83          
  84          /******************** 主函数 **************************/
  85          void main(void)
  86          {
  87   1        u8 i=0,j=7,v=0,x=3,key_led=1;
  88   1      
  89   1        GPIO_config();
  90   1        Timer_config();
  91   1        EA = 1;
  92   1        P2=0x80;
  93   1        while(1)
  94   1        { 
  95   2          if(GetKeyVal_Button()==S5DOWN)
  96   2          {
  97   3            key_led++;
  98   3            if(key_led>4)
  99   3            {
 100   4              key_led=1;
 101   4            }
 102   3            
 103   3          }
 104   2          
 105   2          switch (key_led) 
 106   2          {
 107   3            case 1:
 108   3            {
 109   4              if(n==1)
 110   4              {
 111   5                n=0;
 112   5                LED_LeftToRight(i);
 113   5                i++;
C51 COMPILER V9.54   MAIN                                                                  03/07/2020 20:58:10 PAGE 3   

 114   5                if(i>8)
 115   5                {
 116   6                  i=0;
 117   6                }
 118   5              }
 119   4            }
 120   3            break;
 121   3            
 122   3            case 2:
 123   3            {
 124   4              if(n==1)
 125   4              {
 126   5                n=0;
 127   5                LED_RightToLeft(j);
 128   5                if(j<=0)
 129   5                {
 130   6                  j=7;
 131   6                } 
 132   5                j--;  
 133   5              }
 134   4            }
 135   3            break;
 136   3            
 137   3            case 3:
 138   3            {
 139   4              if(n==1)
 140   4              {
 141   5                n=0;
 142   5                mode_three(v);
 143   5                v++;
 144   5                if(v>4)
 145   5                {
 146   6                  v=0;
 147   6                }
 148   5              }
 149   4            }
 150   3            break;
 151   3          
 152   3            case 4:
 153   3            {
 154   4              if(n==1)
 155   4              {
 156   5                mode_four(x);
 157   5                if(x<=0)
 158   5                {
 159   6                  x=3;
 160   6                }
 161   5                x--;
 162   5              }
 163   4            }
 164   3            break;
 165   3         }
 166   2       }
 167   1        
 168   1      }
 169          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    372    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  03/07/2020 20:58:10 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
